version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - smartadx-network

  redis:
    image: redis:7.2
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always
    networks:
      - smartadx-network

  ad-service:
    build:
      context: ./backend/ad-service
    container_name: ad-service
    ports:
      - "8081:8081"
    depends_on:
      - rabbitmq
      - redis
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://host.docker.internal:5432/adservice
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    networks:
      - smartadx-network

  analytics-service:
    build:
      context: ./backend/analytics-service
    container_name: analytics-service
    ports:
      - "8082:8082"
    depends_on:
      - rabbitmq
      - redis
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://host.docker.internal:5432/analyticsservice
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    networks:
      - smartadx-network

volumes:
  redis_data:

networks:
  smartadx-network:
    driver: bridge
